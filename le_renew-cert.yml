---
- hosts: "nzs-ansible-1"
  gather_facts: false
  tasks:
  - name: "Renew Let's Encrypt Certificate for Netscaler"
    block:
    - name: "Start Apache service"
      ansible.builtin.service:
        name: httpd
        state: started

    - name: "Allow HTTP firewall rule"
      ansible.posix.firewalld:
        service: http
        permanent: no
        state: enabled

    - name: "Create required directories in /opt/letsencrypt"
      file:
        path: "/opt/letsencrypt/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      with_items:
      - account
      - certs
      - csrs
      - keys

    - name: "Generate a Let's Encrypt account key"
      shell: "if [ ! -f {{ letsencrypt_account_key }} ]; then openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}; fi"

    - name: "Generate Let's Encrypt private key"
      shell: "openssl genrsa 4096 | sudo tee /opt/letsencrypt/keys/{{ domain_name }}.key"
      # shell: "if [ ! -f {{ letsencrypt_keys_dir }}/{{ domain_name }}.key ]; then openssl genrsa 4096 | sudo tee /opt/letsencrypt/keys/{{ domain_name }}.key; fi"

    - name: "Generate Let's Encrypt CSR"
      shell: "openssl req -new -sha256 -key /opt/letsencrypt/keys/{{ domain_name }}.key -subj \"/CN={{ domain_name }}\" -reqexts SAN -config <(cat /etc/pki/tls/openssl.cnf <(printf \"\n[SAN]\nsubjectAltName=DNS:{{ domain_name }},DNS:{{ san_1 }},DNS:{{ san_2 }}\")) | sudo tee /opt/letsencrypt/csrs/{{ domain_name }}.csr"
      args:
        executable: /bin/bash

    - name: "Begin Let's Encrypt challenges"
      acme_certificate:
        acme_directory: "{{ acme_directory }}"
        acme_version: "{{ acme_version }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        account_email: "{{ acme_email }}"
        terms_agreed: 1
        challenge: "{{ acme_challenge_type }}"
        csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.pem"
        fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.pem"
        remaining_days: 91
      register: acme_challenge_result_variable

    # - name: "test"
    #   debug:
    #     msg: "{{ acme_challenge_result_variable }}"

    - name: "Create .well-known/acme-challenge directory"
      file:
        path: "{{ http_root_directory }}/.well-known/acme-challenge"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=rx,o=rx

    - name: "Implement http-01 challenge files"
      copy:
        # content: "{{ acme_challenge_result_variable['challenge_data'][item]['http-01']['resource_value'] }}"
        content: "{{ item['value']['http-01']['resource_value'] }}"
        # dest: "{{ http_root_directory }}/{{ acme_challenge_result_variable['challenge_data'][item]['http-01']['resource'] }}"
        dest: "{{ http_root_directory }}/{{ item['value']['http-01']['resource'] }}"
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      with_dict: "{{ acme_challenge_result_variable['challenge_data'] }}"
      # with_items:
      # - "{{ domain_name }}"
      # - "{{ san_1 }}"
      # - "{{ san_2 }}"

    - name: "Complete Let's Encrypt challenges"
      acme_certificate:
        acme_directory: "{{ acme_directory }}"
        acme_version: "{{ acme_version }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        account_email: "{{ acme_email }}"
        challenge: "{{ acme_challenge_type }}"
        csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.pem"
        chain_dest: "{{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.pem"
        fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.pem"
        data: "{{ acme_challenge_result_variable }}"

    always:
    - name: "Remove HTTP firewall rule"
      ignore_errors: yes
      ansible.posix.firewalld:
        service: http
        state: disabled

    - name: "Stop Apache service"
      ignore_errors: yes
      ansible.builtin.service:
        name: httpd
        state: stopped
